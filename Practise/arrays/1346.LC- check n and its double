Given an array arr of integers, check if there exist two indices i and j such that :

i != j
0 <= i, j < arr.length
arr[i] == 2 * arr[j]
 

Example 1:

Input: arr = [10,2,5,3]
Output: true
Explanation: For i = 0 and j = 2, arr[i] == 10 == 2 * 5 == 2 * arr[j]


// class Solution {
// public:
//     bool checkIfExist(vector<int>& arr) {
        
//        sort(arr.begin(),arr.end());
//         int i=0;
//         int j=0;
//         int n= arr.size();
//         int count=0;

//         while( i<n && j<n){
//             if(i!=j && arr[i]==2*arr[j]){
//                 count++;
//                 break;
                
//             }
//             else{
//                 // i++;
//                 j++;
//             }
//         }
//        if(count>0){
//            return true;
//        }
//        else{
//            return false;
//        }



        
//     }
// };


//for loops use is compeletely diffreent from two pointers approach as it 
//7 1 14 11
//for teo pinters use the ans will be false but it needs to be true;
//hence ptrs cant overlap like in for loop .

class Solution {
public:
    bool checkIfExist(vector<int>& arr) {
      int count=0;
        for(int i=0;i<arr.size();i++){
          for(int j=0;j<arr.size();j++){
            if(i!=j && arr[i]==2*arr[j]){
              count++;
              break;
            }
          }
        }
        if(count>0){
          return true;
        }
        else 
          return false;
    }
};