Given an integer array nums sorted in non-decreasing order, return an array of the squares of each number sorted in non-decreasing order.

 

Example 1:

Input: nums = [-4,-1,0,3,10]
Output: [0,1,9,16,100]
Explanation: After squaring, the array becomes [16,1,0,9,100].
After sorting, it becomes [0,1,9,16,100].


class Solution {
public:
    vector<int> sortedSquares(vector<int>& nums) {
        int n= nums.size();
        int i=0,j=n-1;

        vector<int>v(n);
        int k=n-1;

        while(i<=j){
            if(abs(nums[i])>abs(nums[j])){
                v[k--]=nums[i]*nums[i];
                i++;
                // k--;
            }
            else{
                v[k--]=nums[j]*nums[j];
                j--;
                // k--;
            }
        }
        return v;
        
    }
};

